{
  
    
        "post0": {
            "title": "What I Learned from the Full Stack Deep Learning Labs",
            "content": "What are the Full Stack Deep Learning Labs About? .",
            "url": "https://jacquesthibodeau.com/deep-learning/full-stack-deep-learning/projects/2021/09/26/wil-from-fsdl-labs.html",
            "relUrl": "/deep-learning/full-stack-deep-learning/projects/2021/09/26/wil-from-fsdl-labs.html",
            "date": " • Sep 26, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "How to Fine-Tune GPT-3 via the OpenAI API",
            "content": "What are the Full Stack Deep Learning Labs About? .",
            "url": "https://jacquesthibodeau.com/gpt-3/openai/deep-learning/2021/09/26/fine-tuning-gpt-3.html",
            "relUrl": "/gpt-3/openai/deep-learning/2021/09/26/fine-tuning-gpt-3.html",
            "date": " • Sep 26, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "Interesting Applications of AI - Elicit (GPT-3)",
            "content": "What this Post is About . A few months ago, I gained access to a new exciting tool called Elicit from Ought. Elicit is an AI research assistant that helps you answer questions &quot;by making qualitative reasoning steps explicit and using language models to incrementally automate those steps.&quot; . Here we can see Elicit&#39;s main page, where I have on the Task picker. (Though it&#39;s hidden here, there is a text prompt box below the task selector where you can type in a question, topic or sentence.) . . Using GPT-3 on the backend, Elicit can help with a wide range of research and brainstorming tasks. The team behind Elicit is focused on building tools that will help millions of people think through the types of questions we ask ourselves every day. . You can watch Elicit screencasts on YouTube to get a sense of all the things it can do. It is impressive. . Here&#39;s a general overview of what Elicit can do: . You can see below a video of Elicit being used to help researchers search for papers on the topic of military applications of AI, something that the Center for Security and Emerging Technology (CSET) is interested in and has done great work on. . What Excites me about Tools like Elicit . Recent innovations in machine learning have helped us build models that deal with labeled data tasks, but how can we use these models to answer questions where we don&#39;t have a labeled dataset and are a bit more subjective? For example, could we have an AI where we can ask it questions like &quot;How do I decide what career I should dedicate my life to?&quot; or &quot;My partner feels jealous about my career growth, what should I do?&quot; It would be fantastic if we could have an AI that could answer these questions. . I&#39;m particularly excited about how AI will help make knowledge accessible to everyone in a way that will guide humanity towards a better future. Though still in its early stages, AI has started showing signs of having the potential to revolutionize education, research, and even therapy. . One glimpse of this was in a Twitter thread where one of the employees at OpenAI said they used GPT-3 as a therapist and achieved a more profound breakthrough than they had ever had with a human therapist. Of course, we&#39;re not at the point where our models can be taken out of the labs yet. However, once our models become exceptional and robust (and we can make such services unbelievably cheap, accessible, and compatible with human values), the inequality of world-class services will likely change quickly. . Initial look into Elicit . For this blog post, I will focus on giving an overview of Elicit rather than going into the nitty-gritty. So, I&#39;m not going to be too formal and will instead point to some of the things I find cool and give my thoughts. . Going back to AI for mental health, we can see here how Elicit is used to help do Positive Reframing of negative statements you tell it. The video below shows how they give Elicit prompts for Few-Shot Learning. If you simply ask GPT-3 a question without any prompts, we call it a &quot;Zero-Shot&quot; model. Once we give it one example (K=1), it becomes a &quot;One-Shot&quot; model. For more than one example (K=2+), we call it a &quot;few-shot&quot; model. The more examples we give, the more accurate it will be, but it can still provide great results with very few examples. As we saw in the original GPT-3 paper, as you increase K, GPT-3 can perform better than a model like BERT fine-tuned on a given task (scroll a bit to see a plot example from the paper). That is why it is helpful to add examples in Elicit. . Here&#39;s a chart showing GPT-3 performance on a Trivia task: . . On TriviaQA GPT3&#39;s performance grows smoothly with model size, suggesting that language models continue to absorb knowledge as their capacity increases. One-shot and few-shot performance make significant gains over zero-shot behavior, matching and exceeding the performance of the SOTA fine-tuned open-domain model, RAG. . This is exciting and all, but I should note that this is not always the case, and you need to be aware when a fine-tuned model trained on full training data will be better in your situation. As we can see in a recent paper, GPT-3 does not mean the end of fine-tuned models. . We investigated the performance of two powerful transformer language models, i.e. GPT-3 and BioBERT, in few-shot settings on various biomedical NLP tasks. The experimental results showed that, to a great extent, both the models underperform a language model fine-tuned on the full training data. Although GPT-3 had already achieved near state-of-the-art results in few-shot knowledge transfer on open-domain NLP tasks, it could not perform as effectively as BioBERT, which is orders of magnitude smaller than GPT-3. . That said, GPT-3 was created to be as good as possible to a whole variety of tasks with no fine-tuning, and it did not fall short of that. . Creating a Task in Elicit . Here&#39;s a video of how to create your own task in Elicit so that you can mold it for your specific needs. . I won&#39;t go into the details here since the video is very comprehensive. . The Use of Stars in Elicit . You will notice by watching the videos that there are stars next to each output. Clicking on these stars helps the underlying GPT-3 model become better at generating new output. In other words, my understanding is that they use the user-selected stars as additional prompts to the model, thereby increase K and making the few-shot model more accurate for the user. . As you select stars, you can generate more output and get more of the kind of output you are looking for. . What if none of the outputs are what you are looking for? Well, you can go to the bottom of the outputs and add a custom result to help the model out. After a few of these, you should see better results. . I think this is incredibly cool, and it was implemented beautifully. A few months ago, I was working on a project and trying to label a dataset using zero-shot learning, but I wasn&#39;t too impressed with the output. It got me thinking about different ways to use these models to help us label data. Depending on what we are trying to do, there are a few approaches we could take. From using a library like Snorkel, implementing an active learning component (an introduction can be found here), using a fine-tuned model for our specific task, or, of course, use GPT-like models to label data. One exceptional example of using GPT-3 to label data can be found here: . What&#39;s awesome about this video is that Xavier Amatriain says that GPT-3 was better at creating labeled data for their models than anything they could have come up with themselves. Part of the reason is that GPT-3 could generate not only much more data but also much more diverse (nuanced variability) data. . So, you could create an active learning process along with GPT-3 to label the data, and as more quality data becomes available, you can even fine-tune a pre-trained model on that generated data (which is what Curai seems to be doing). . Creating a Search Task in Elicit . In this video, we can see how we can use investment data to create a search task. For example, we can imagine VCs using Elicit to search for companies they might be interested in investing in. There&#39;s also a &quot;Composite&quot; task type (Compose multiple task types together into one). We could imagine a VC firm could create a search task that answers questions about the companies and then consolidate the companies that meet specific criteria. . Using Elicit as a Researcher . As was alluded to earlier, Ought puts a lot of effort into helping researchers conduct research. This can range from: . Finding the best papers in a given field | Generating research questions | Identifying the most important sentence in an abstract to help quickly answer whether the paper is relevant or not | Finding research collaborators | Explaining a concept very simply or in terms you would better understand (ex: explain this economics concept in computer science terms) | . Here&#39;s a video that shows how to create a list of potential research collaborators quickly: . And here&#39;s a video where Elicit suggests which concepts you should focus on learning about to get a better understanding of a topic: . This is one of the best ways I&#39;ve found to better understand a topic/field very quickly, at least to the point where you can have a conversation with other experts in the field. We can imagine that people who need to grasp many concepts can significantly benefit from this task in Elicit. For example, VCs trying to grasp new technologies, politicians trying to understand something like Cryptocurrency, or interdisciplinary researchers trying to connect multiple fields. . Into Forecasting? . Elicit has a feature called Elicit Forecast which is hidden from the main website, but they go into a bit of detail about how it works in the video below. For any aspiring superforecaster out there, this could be a great tool. . In the future, we can expect people will ask Elicit a question like, &quot;Will we be able to finish project x on time?&quot; and Elicit will give us its best guess. As time goes on, I&#39;m sure a tool like Elicit will become an invaluable tool for forecasters and people like project managers who want to get a better idea of how long a project will take. . Building AI based on what we&#39;ve Learned from Human Thinking . There are concepts like First Principles Thinking (FTP) that have allowed humans to take great leaps in innovation. However, FTP is hard! We know how great it can be, yet few people use it habitually. Of course, it&#39;s basically unsustainable to use for every little thing that we do. That&#39;s why even the people who use FTP end up using it only when tackling complex (many moving parts with feedback loops) or complicated (very difficult like building a rocket ship) problems. But what if we could lower the barrier to entry and sustainability for using FTP? What if we had an AI that allowed us to enter into an &quot;FTP state of thinking&quot; more often and with higher effectiveness? Perhaps we could accelerate the work of great innovators and help those who never really got into an FTP state of thinking. I can see Elicit helping in this direction. . But here&#39;s what the people at Ought are already working on: generating subquestions and searching for answers to those subquestions! . This mode of thinking was quite common when I was studying physics. And in fact, the physicist Enrico Fermi was known for, among many other things, using &quot;Fermi Estimates&quot; to make an educated guess about a question. Breaking down the main question into subquestions, he answered the main question by creating estimates for the subquestions and feeding that into the main question. This method is now commonly used in forecasting, and people will often run Monte Carlo simulations to get a guesstimate for each subquestion. I initially came across this idea more formally in the book How to Measure Anything by Douglas W. Hubbard. . Anyway, as we see in that video, Elicit can generate subquestions to what seems to be an impossible question to answer. At the moment, the search results to help users answer the subquestions will be linked to documents that may contain the answer. I believe they have made some progress since then, but I can see this going further in the future. For example, you could extract the text from a database of documents and use a model to actually answer the subquestion for the user and point to where exactly it found the answer in the document. (This may already be possible!) . In other words, you could have an open-ended question like &quot;How can we strengthen the US AI workforce?&quot; and Elicit could generate all the relevant subquestions and answer them! Beyond that, it could potentially help answer questions like &quot;How many professional piano tuners are there in Chicago?&quot; by answering a series of subquestions like &quot;What is the population of Chicago?&quot; and &quot;How many people in Chicago own a piano?&quot; . I think it could eventually end up doing a great job of answering questions like &quot;By 2070, how many climate refugees will there be in the US?&quot; by giving a nice probability distribution guesstimate with specific reasons for the output described. . Closing Thoughts . I&#39;ve worked in government for the past four years, and many things excite me about Elicit, things that I thought of building myself. So I&#39;m glad someone is building a tool like this. . As they write on their website, I can see it being applied in government policy (Senators could become better at asking questions and could get caught up to speed on issues much more effectively than the current approach), but I can also see it working in strategic foresight teams like Policy Horizons Canada or in regulatory bodies (like the Canada Energy Regulator, my employer) who have to dig into tons of PDFs to find the right information and make sure the company is compliant with the law. Note: if you are interested about Strategic Foresight, I give an introduction here. . One of the things I am the most excited about is creating a second brain with a tool like Elicit. Sure we can use Roam Research to connect our thoughts, and we can even load tons of text in Roam Research. Still, I think Semantic Search with Elicit could be much more powerful by simply having it point to or answer questions we have on a specific topic after loading 100k documents on that topic. (And actually, I&#39;m pretty sure this is already possible in Elicit, so I&#39;ll update this if I find out if it is!) .",
            "url": "https://jacquesthibodeau.com/gpt/elicit/ought/2021/09/24/experimenting-with-elicit.html",
            "relUrl": "/gpt/elicit/ought/2021/09/24/experimenting-with-elicit.html",
            "date": " • Sep 24, 2021"
        }
        
    
  
    
        ,"post3": {
            "title": "How to use Hugging Face and PyTorch Lightning on SageMaker",
            "content": "This post will be put aside for now. It is quite easy to use HuggingFace with SageMaker now that Amazon and HuggingFace have made a partnership. You should only use HuggingFace with PyTorch Lightning after you&#39;ve exhausted the more simple approaches that only involve HuggingFace (or if you really need a custom model, like a molti-modal model). . Understanding Model Deployment on SageMaker . Before I dive into the nitty-gritty details of how to use Hugging Face and PyTorch Lightning in SageMaker, I&#39;m going to give a general overview of SageMaker. In other words, if you only want to know how to use Hugging Face and PyTorch Lightning, skip this section. . Quick Overview of SageMaker . SageMaker allows AWS users to create a notebook instance in the cloud. SageMaker tries to make it easy for data scientists and machine learning engineers to train and deploy their machine learning models in production. Therefore, if you are comfortable using Jupyter Notebooks for data science, SageMaker will be great for you. However, there are some pros and cons. . Pros: . SageMaker has a great surrounding ecosystem that allows you to train, debug, and deploy your models, as well as my other useful tools for machine learning in production. | It makes it easier to do some tests and sanity-checks when you are doing model development in the cloud. | The SageMaker Python SDK makes it easy to do things like A/B tests. In other words, when you create or update an endpoint, you can easily split the traffic going to one endpoint across several models (and by different percentages/weights). You can easily change the endpoint configuration to switch to the best model over time. | The SDK also makes it easy to load and unload models dynamically as needed (multi-model endpoints). If you use this in place of creating an endpoint for every model you put in production, you can save a heck of a lot of money. For example, if you have 1000 clients who all have a different model fine-tuned on their specific data, you can go from 171k to 1k US dollars per month! | . Cons: . AWS charges a premium for the usefulness of the notebook, and the surrounding infrastructure. | Since you need to use the SageMaker Python SDK to run your code, your local notebooks need to be updated to run in SageMaker. That means, depending on the task, it may be preferable to simply put all your code in scripts, spin up an EC2 instance, and deploy with Docker. | . All-in-all, I would say that the best time to use SageMaker is when you are doing a lot of experimentation, you think notebooks will help you better explore the data, and you need to additional cloud compute resources. . AWS also has a lot of sample notebooks for deployment, so it may be worth it to check them (particularly if you are planning to deploy similar models). Building on top of the work of others could also save you some time. .",
            "url": "https://jacquesthibodeau.com/mlops/huggingface/pytorchlightning/sagemaker/aws/2021/06/30/how-to-use-huggingface-and-pytorch-lightning-on-sagemaker.html",
            "relUrl": "/mlops/huggingface/pytorchlightning/sagemaker/aws/2021/06/30/how-to-use-huggingface-and-pytorch-lightning-on-sagemaker.html",
            "date": " • Jun 30, 2021"
        }
        
    
  
    
        ,"post4": {
            "title": "What I Learned From Made With ML MLOps Course",
            "content": "What This Post Is About . In this post, I will capture the learnings I made when going through the Made With ML MLOps. I will try to add my personal twist and I will skip over the section I already feel comfortable with, so you can go directly to the Made With ML if you want to learn in more detail. . My focus will be to give the TLDR of what I personally have learned the most from the website since that will be the most beneficial for me. That doesn&#39;t mean the things I don&#39;t cover are less important. For example, understanding intuition and the objective of a project is crucial and it is something I find many people will miss. If you&#39;re not aiming for the correct objective, everything else is basically meaningless. . Anyway, without further ado, here are my notes from the MLOps course: . This is my first blog post on my website! Victory! . . And more to come! .",
            "url": "https://jacquesthibodeau.com/mlops/madewithml/2021/06/29/what-i-learned-from-made-with-ml-mlops.html",
            "relUrl": "/mlops/madewithml/2021/06/29/what-i-learned-from-made-with-ml-mlops.html",
            "date": " • Jun 29, 2021"
        }
        
    
  
    
        ,"post5": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://jacquesthibodeau.com/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Hi, I’m Jacques Thibodeau. My long-term goal is to create a world with less suffering and prevent any existential risks to humanity. At the highest level, my current focus is to find ways to help individuals meet their security needs, so that they may move on to meeting their growth needs, and eventually become fully transcendent beings. For a quick summary of what this means, go here. Or read the book which thought me about transcendence (it’s not in the woo-woo sense): Transcend: The New Science of Self-Actualization. . I think it is important for me to leave that information here as I want to remind myself that everything I do is for the betterment of humanity and all beings. . On this blog, my particular focus is to improve everyone’s AI skills (including my own) so that we can build solutions that make it into the real-world and provide a net benefit to society. Since not every project can be certain to have a positive impact in the long-term, I will also be donating a portion of my income to effective charities so that I can divert the money-making potential of AI to the most good. I have nothing against making money. In fact, part of my goal here is to generate a significant amount of wealth through AI so that I can donate more to effective charities, and hopefully help others do the same. . For more details on what has most impacted my current beliefs, go to EffectiveAltruism.org and read The Pragmatist’s Guide to Life. . The following image is that of the boats that represent human life. The bottom of the boat is necessary to prevent us from sinking. We need to meet these security needs so that our sail can guide us in the direction of growth. In the state of transcendence, human beings are striving every day towards not only their own greatest potential, but everyone elses potential. There is no more ego. . .",
          "url": "https://jacquesthibodeau.com/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jacquesthibodeau.com/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}